package ru.eremin.tm.server.endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.3
 * 2019-05-07T18:23:20.992+03:00
 * Generated source version: 3.2.3
 */
@WebService(targetNamespace = "http://endpoint.server.tm.eremin.ru/", name = "AuthorizationEndpoint")
@XmlSeeAlso({ObjectFactory.class})
public interface AuthorizationEndpoint {

    @WebMethod
    @Action(input = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/logoutRequest", output = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/logoutResponse", fault = {@FaultAction(className = IncorrectDataException_Exception.class, value = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/logout/Fault/IncorrectDataException"), @FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/logout/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "logout", targetNamespace = "http://endpoint.server.tm.eremin.ru/", className = "ru.eremin.tm.server.endpoint.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://endpoint.server.tm.eremin.ru/", className = "ru.eremin.tm.server.endpoint.LogoutResponse")
    @WebResult(name = "return", targetNamespace = "")
    ru.eremin.tm.server.endpoint.ResultDTO logout(
            @WebParam(name = "arg0", targetNamespace = "")
                    ru.eremin.tm.server.endpoint.SessionDTO arg0
    ) throws IncorrectDataException_Exception, AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/sessionValidateRequest", output = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/sessionValidateResponse", fault = {@FaultAction(className = IncorrectDataException_Exception.class, value = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/sessionValidate/Fault/IncorrectDataException"), @FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/sessionValidate/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "sessionValidate", targetNamespace = "http://endpoint.server.tm.eremin.ru/", className = "ru.eremin.tm.server.endpoint.SessionValidate")
    @ResponseWrapper(localName = "sessionValidateResponse", targetNamespace = "http://endpoint.server.tm.eremin.ru/", className = "ru.eremin.tm.server.endpoint.SessionValidateResponse")
    void sessionValidate(
            @WebParam(name = "arg0", targetNamespace = "")
                    ru.eremin.tm.server.endpoint.SessionDTO arg0
    ) throws IncorrectDataException_Exception, AccessForbiddenException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/loginRequest", output = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/loginResponse", fault = {@FaultAction(className = IncorrectDataException_Exception.class, value = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/login/Fault/IncorrectDataException"), @FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint.server.tm.eremin.ru/AuthorizationEndpoint/login/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "login", targetNamespace = "http://endpoint.server.tm.eremin.ru/", className = "ru.eremin.tm.server.endpoint.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://endpoint.server.tm.eremin.ru/", className = "ru.eremin.tm.server.endpoint.LoginResponse")
    @WebResult(name = "return", targetNamespace = "")
    ru.eremin.tm.server.endpoint.SessionDTO login(
            @WebParam(name = "arg0", targetNamespace = "")
                    java.lang.String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    java.lang.String arg1
    ) throws IncorrectDataException_Exception, AccessForbiddenException_Exception;
}
